@page "/checkout";
@using DataAccessBlazor;
@using DataAccessBlazor.Services;

@inject OrderState OrderState
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<div class="main">
    <EditForm Model=Order.DeliveryAddress OnSubmit=CheckSubmission>
        <div class="checkout-cols">
            <div class="checkout-order-details">
                <h4>Review order</h4>
                <OrderReview Order="Order" />
            </div>

            <div class="checkout-delivery-address">
                <h4>Deliver to...</h4>
                <div class="checkout-delivery-address">
                    <h4>Deliver to...</h4>
                    @if (isError)
                    {
                        <div class="alert alert-danger">Please enter a name and address & postal code .</div>
                    }
                    <AddressEditor Address="Order.DeliveryAddress" />
                </div>
            </div>
        </div>
        <button class="checkout-button btn btn-warning" disabled=@isSubmitting>
            @* <button class="checkout-button btn btn-warning" @onclick="AddOrder" disabled=@isSubmitting> *@
            Place order
        </button>
    </EditForm>
</div>

@code {

    Order Order => OrderState.Order;

    bool isSubmitting;
    bool isError = false;

    private async Task CheckSubmission(EditContext editContext)
    {
        isSubmitting = true;
        var model = editContext.Model as Address;
        isError = string.IsNullOrWhiteSpace(model?.Name)
            || string.IsNullOrWhiteSpace(model?.Line1)
            || string.IsNullOrWhiteSpace(model?.PostalCode);
        if (!isError)
        {
            await AddOrder();
        }
        isSubmitting = false;

    }

    async Task AddOrder()
    {
        var response = await HttpClient.PostAsJsonAsync($"{NavigationManager.BaseUri}orders", OrderState.Order);
        var newOrderId = await response.Content.ReadFromJsonAsync<int>();
        OrderState.ResetOrder();
        NavigationManager.NavigateTo($"myorders/{newOrderId}");
    }


}
