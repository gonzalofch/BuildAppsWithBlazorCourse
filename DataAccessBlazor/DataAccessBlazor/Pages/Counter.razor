@page "/counter"

<h1>Counter</h1>

<p>Current count: @currentCount</p>
<br />
<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<button @onclick="DoWork">Run time-consuming operation</button>
<p>@Message</p>
<br />
<button class="btn btn-primary" @onclick="ChangeFocus">Click me to change focus</button>
<input @ref=InputField @onfocus="HandleFocus" value="@data" />

@code {
    private ElementReference InputField;
    private string data;

    private async Task ChangeFocus()
    {
        await InputField.FocusAsync();
    }

    private async Task HandleFocus()
    {
        data = "Received focus";
    }
}
@code {
    public string Message { get; set; } = "Sin nada que hacer :(";
    private async Task DoWork()
    {
        Message = "Realizando trabajo...";
        // Call a method that takes a long time to run and free the current thread
        await Task.Delay(5000); // Espera de 5 segundos
        Message = "Trabajo completado";
        // Omitted for brevity
    }
}

@code {
    private int currentCount = 0;

    // private void IncrementCount()
    // {
    //     currentCount++;
    // }

    private void IncrementCount(MouseEventArgs e)
    {
        if (e.CtrlKey) // Ctrl key pressed as well
        {
            currentCount += 100;
        }
        else
        {
            currentCount++;
        }
    }
}