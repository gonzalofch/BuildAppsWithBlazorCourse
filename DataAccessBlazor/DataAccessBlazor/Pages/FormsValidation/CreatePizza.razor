@page "/admin/createpizza"

<h1>Add a new pizza</h1>
@*Blazor performs validation at two different times:

Field validation is executed when a user tabs out of a field.
Field validation ensures that a user is aware of the validation problem at the earliest possible time.

Model validation is executed when the user submits the form.
Model validation ensures that invalid data isn't stored*@
@* <EditForm Model="@pizza" OnSubmit=@HandleSubmission> *@
<EditForm Model="@pizza" OnValidSubmit=@ProcessInputData OnInvalidSubmit=@ShowFeedback>

    <DataAnnotationsValidator />

    <InputText id="name" @bind-Value="pizza.Name" />
    <ValidationMessage For="@(() => pizza.Name)" />

    <InputText id="description" @bind-Value="pizza.Description" />

    <InputText id="chefemail" @bind-Value="pizza.ChefEmail" />
    <ValidationMessage For="@(() => pizza.ChefEmail)" />

    <InputNumber id="price" @bind-Value="pizza.Price" />
    <ValidationMessage For="@(() => pizza.Price)" />

    <ValidationSummary />

</EditForm>

@code {
    private Pizza pizza = new();
    void HandleSubmission(EditContext context)
    {
        bool dataIsValid = context.Validate();
        if (dataIsValid)
        {
            // Store valid data here
        }
    }
    void ProcessInputData(EditContext context)
    {
        // Store valid data here
    }

    void ShowFeedback(EditContext context)
    {
        // Take action here to help the user correct the issues
    }

}